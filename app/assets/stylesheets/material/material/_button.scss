.btn {
  background-color: $btn-bg;
  background-image: none;
  border: 0;
  border-radius: $border-radius;
  box-shadow: map-get($btn-elevation-shadow, shadow);
  color: $btn-color;
  cursor: pointer;
  display: inline-block;
  font-size: $btn-font-size;
  font-weight: $btn-font-weight;
  line-height: 1;
  margin: 0;
  max-width: 100%;
  min-width: $btn-min-width;
  padding: (($btn-height - $btn-font-size) / 2) $spacer-md-x;
  position: relative;
  text-align: center;
  text-transform: uppercase;
  transition: all $transition-duration $transition-timing-function;
  user-select: none;
  vertical-align: middle;
  white-space: nowrap;
  z-index: map-get($btn-elevation-shadow, elevation);
  &::before {
    background-color: $btn-focus-overlay;
    border-radius: $border-radius;
    content: "";
    display: block;
    opacity: 0;
    position: absolute;
      top: 0;
      right: 0;
      bottom: 0;
      left: 0;
    transition: opacity $transition-duration $transition-timing-function;
    z-index: -1;
  }
  // active, focus, hover
    &:active,
    &.active {
      background-color: $btn-bg-pressed;
      box-shadow: map-get($btn-elevation-shadow-pressed, shadow);
      z-index: map-get($btn-elevation-shadow-pressed, elevation);
    }
    &:focus,
    &:hover,
    &.focus {
      color: $btn-color-pressed;
      text-decoration: none;
    }
    &:focus,
    &.focus {
      &::before {
        opacity: 1;
      }
    }
    &:focus {
      outline: 0;
    }
  // disabled
    &:disabled,
    &.disabled {
      background-color: $btn-bg-disabled;
      box-shadow: none;
      color: $btn-color-disabled;
      cursor: $cursor-disabled;
      opacity: 1;
      pointer-events: none;
      &::before,
      .waves-ripple {
        display: none;
      }
    }
  // open
    .dropdown.open > &.dropdown-toggle,
    .dropup.open > &.dropdown-toggle {
      &::before {
        opacity: 1;
      }
    }
    .dropdown.open > & {
      &.dropdown-toggle,
      &.dropdown-toggle::before {
        border-radius: $border-radius $border-radius 0 0;
      }
    }
    .dropup.open > & {
      &.dropdown-toggle,
      &.dropdown-toggle::before {
        border-radius: 0 0 $border-radius $border-radius;
      }
    }
  // waves
    &.waves-attach:active {
      &::before {
        transition-delay: $waves-transition-duration;
      }
    }
}

// colour
  @each $color in $palettes {
    $i: index($palettes, $color);

    .btn-#{$color} {
      background-color: nth($palettes-color, $i);
      color: nth($palettes-text-color, $i);
      // active, focus, hover
        &:active,
        &.active {
          background-color: nth($palettes-color-dark, $i);
        }
        &:focus,
        &:hover,
        &.focus {
          color: nth($palettes-text-color, $i);
        }
    }
  }

// inverse
  .btn-inverse {
    background-color: $btn-bg-inverse;
    color: $btn-color-inverse;
    // active, focus, hover
      &:active,
      &.active {
        background-color: $btn-bg-inverse-pressed;
      }
      &:focus,
      &:hover,
      &.focus {
        color: $btn-color-inverse-pressed;
      }
    // disabled
      &:disabled,
      &.disabled {
        background-color: $btn-bg-inverse-disabled;
        color: $btn-color-inverse-disabled;
      }
  }

// size
  .btn-lg {
    font-size: $btn-font-size-lg;
    padding-top: (($btn-height-lg - $btn-font-size-lg) / 2);
    padding-bottom: (($btn-height-lg - $btn-font-size-lg) / 2)
  }

  .btn-sm {
    font-size: $btn-font-size-sm;
    padding-top: (($btn-height-sm - $btn-font-size-sm) / 2);
    padding-bottom: (($btn-height-sm - $btn-font-size-sm) / 2)
  }

//
// block button
//
  .btn-block {
    display: block;
    width: 100%;
    + .btn-block {
      margin-top: $spacer-xs-y;
    }
  }

//
// link button
//
  .btn-link {
    background-color: transparent;
    border-radius: 0;
    box-shadow: none;
    color: $link-color;
    font-weight: normal;
    text-transform: none;
    z-index: initial;
    &::before {
      display: none;
    }
    // active, focus, hover
      &:active,
      &.active {
        background-color: transparent;
        box-shadow: none;
      }
      &:focus,
      &:hover,
      &.focus {
        color: $link-color-hover;
        text-decoration: $link-decoration-hover;
      }
      &:focus,
      &.focus {
        @include tab-focus;
      }
    // disabled
      &:disabled,
      &.disabled {
        background-color: transparent;
      }
  }
